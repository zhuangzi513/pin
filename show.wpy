<template>
  <view style="height: {{ windowHeight }}; overflow: hidden">
    <import src="../plugins/wxParse/wxParse.wxml" />

    <view class="card_container">
          <view class="card_text_left">
              <text class="num">{{ detail.text_left }}</text>
          </view>
          <view class="card_img_middle">
              <img src="{{ detail.img_path }}"/>
          </view>
          <view class="card_text_right">
              <text class="num">{{ detail.text_right }}</text>
          </view>
    </view>

    <view class="basic_info">
      <view class="doc">
        <text class="num">{{ detail.price }}</text>
      </view>
      <view class="doc" >concerned by:
        <text class="num">{{ detail.concerned_by}} people</text>
      </view>
      <view class="doc" >wanted by:
        <text class="num">{{ detail.wanted_by}} people</text>
      </view>
    </view>

    <view class="history">
    </view>

    <view class="detail_bottom">
      <view class="bottom_box">
        <view class="item" @tap="goToHomePage">
          <i class="iconfont icon-home"></i>
          <view class="doc">BACK</view>
        </view>
        <view class="item" @tap="toggleZAN">
          <i class="iconfont icon-message"></i>
          <view class="doc">one more ZAN</view>
        </view>
        <view class="item {{ isFavorite ? 'favorite_active' : '' }}" @tap="toggleFavorite">
          <i class="iconfont icon-collection"></i>
          <view class="doc">i like it</view>
        </view>
        <view class="sy-bottom {{ canOrder ? 'btn-cart' : 'cart-color' }}" @tap="addToFav">i wannt</view>
        <view class="sy-bottom {{ canOrder ? 'btn-order' : 'order-color' }}" @tap="takeOrder">{{ purchaseText }}</view>
      </view>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import api from '@/api/api'
  import tip from '@/utils/tip'
  import wxParse from '../plugins/wxParse/wxParse'
  import CommentList from '@/components/comment_list'
  import { SYSTEM_INFO, USER_SPECICAL_INFO } from '@/utils/constant'

  export default class GoodsDetail extends wepy.page {
    config = {
      navigationBarTitleText: 'Details'
    }

    components = {
      commentList: CommentList
    }

    data = {
      openId: '',

      windowHeight: '100%',
      goodsId: 0,
      detail: {},
      commentList: [
        {
          url: '../images/nav/icon_nav_01_new.png',
          name: '',
          time: '2018-10-01 10:10',
          content: ''
          start: 4.5,
          children: [{
            content: ''
          }]
        },
        {
          url: '../images/nav/icon_nav_02_new.png',
          name: '',
          time: '2017-10-02 10:10',
          content: ''
          start: 4,
          children: []
        }
      ],

      isFavorite: false,
      canOrder: true,
      purchaseText: 'I like it',
      modelHidden: true,
      animation: {},
      animationData: '',
      orderType: 1, 
      orderNumber: 1,
      purchaseType: 1,
      special: 0 
    }

    methods = {

      moreComment() {
        wepy.navigateTo({
          url: '/pages/comment'
        })
      },

      goToHomePage() {
        wepy.switchTab({
          url: '/pages/home'
        })
      },

      toggleZAN() {
        if (this.isZAN) {
          this.cancelZAN()
        } else {
          this.addZAN()
        }
      },

      toggleFavorite() {
        if (this.isFavorite) {
          this.cancelFav()
        } else {
          this.addFav()
        }
      }
    }

    async getGoodsDetail() {
      let that = this
      const json = await api.getGoodsDetail({
        query: {
          id: that.goodsId
        }
      })

      if (json.data.code === '0') {
        that.detail = json.data.data
        wxParse.wxParse('detailInfo', 'html', that.detail.detailInfo, this)
      } else {
        tip.error(json.data.msg ? json.data.msg : 'Failed to get info of the BB')
      }
      that.$apply()
    }

    async addFav() {
      let that = this
      const json = await api.addToFavList({
        query: {
          openId: that.openId,
          goodsId: that.goodsId,
          goodsSkuId: this.detail.goodsSkuValIds,
          purchaseType: this.purchaseType,
          num: this.orderNumber
        }
      })

      if (json.data.code === '0') {
        this.windowHeight = '100%'
        this.animation.height(0).step()
        this.setData({
          animationData: this.animation.export()
        })
        setTimeout(() => {
          this.modelHidden = true
          this.$apply()
        }, 100)
        tip.success('Save successfully')
      } else {
        tip.error(json.data.msg ? json.data.msg : 'Failed to addToFavList')
      }
    }

    async cancelFav() {
      let that = this
      const json = await api.removeFromFavList({
        query: {
          openId: that.openId,
          goodsId: that.goodsId
        }
      })

      if (json.data.code === '0') {
        that.isFavorite = false
        tip.toast('successfully removeFromFavList')
      } else {
        tip.error(json.data.msg ? json.data.msg : 'failed to removeFromFavList')
      }
      that.$apply()
    }

    async isGoodsFavorite() {
      let that = this
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {}
      let openId = userSpecialInfo.openid
      const json = await api.isGoodsFavorite({
        query: {
          openId: openId,
          goodsId: that.goodsId
        }
      })

      if (json.data.code === '0') {
        if (json.data.isFavorite === 1) {
          that.isFavorite = true
        } else {
          that.isFavorite = false
        }
      } else {
        tip.error(json.data.msg ? json.data.msg : 'Failed to check fav')
      }
      that.$apply()
    }

    async addZAN() {
      let that = this
      const json = await api.zanGoods({
        query: {
          openId: that.openId,
          goodsId: that.goodsId
        }
      })

      if (json.data.code === '0') {
        that.isFavorite = true
        tip.toast('successfully ZAN')
      } else {
        tip.error(json.data.msg ? json.data.msg : 'failed to ZAN')
      }
      that.$apply()
    }

    async cancelZAN() {
      let that = this
      const json = await api.cancelZANGoods({
        query: {
          openId: that.openId,
          goodsId: that.goodsId
        }
      })

      if (json.data.code === '0') {
        that.isFavorite = false
        tip.toast('successfully cancel ZAN')
      } else {
        tip.error(json.data.msg ? json.data.msg : 'failed to cancel ZAN')
      }
      that.$apply()
    }

    onLoad(option) {
      this.goodsId = option.id
      this.detail = {}
      this.purchaseType = (option.purchasetype === undefined) ? 1 : option.purchasetype
      this.purchaseText = (this.purchaseType === 2) ? 'please show me again' : 'i want it'
      this.special = (option.special !== undefined) ? 0 : option.special
      this.orderNumber = 1
      this.isFavorite = false
      this.canOrder = true
      this.hidden = true
      this.windowHeight = '100%'
      this.$apply()

      // Load goods detail
      this.getGoodsDetail()
    }

    onShow() {
      this.isGoodsFavorite()
      // Get open id, this does not work with test appid
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {}
      this.openId = userSpecialInfo.openid
    }
  }
</script>
<style lang="less">
  .basic_info {
    background: #fff;
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 108rpx;
    border-top: 1px solid #efefef;
    border-bottom: 1px solid #efefef;
    padding: 0 30rpx;

    .doc {
      color: #808080;
      .num {
        color: #f73c3c;
      }
    }
  }

  .card_container {
    display: flex;
    position: relative;
    width: 95%;
    height: 40%;
    flex-direction: rows;
    justify-content: space-between;
    align-items: center;
    border-radius: 8rpx;
    box-shadow: 0 4rpx 8rpx rgba(0, 0, 0, 0.1);
    border: 2rpx solid blue;
    background-size: cover;
    background-position: center;

    .card_text_left {
        display: flex;
        flex-direction: column;
        align-items: center;
        writing-mode: vertical-lr;
        position: relative;
        width: 25%;
        height:80%;
        border-radius: 8rpx;
        box-shadow: 0 4rpx 8rpx rgba(0, 0, 0, 0.1);
        border: 2rpx solid green;
    }
    .card_img_middle {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        width: 40%;
        height:80%;
        border-radius: 8rpx;
        box-shadow: 0 4rpx 8px rgba(0, 0, 0, 0.1);
        border: 2rpx solid green;
    }
    .card_text_right {
        display: flex;
        flex-direction: column;
        align-items: center;
        writing-mode: vertical-lr;
        position: relative;
        width: 25%;
        height:80%;
        border-radius: 8rpx;
        box-shadow: 0 4rpx 8rpx rgba(0, 0, 0, 0.1);
        border: 2rpx solid green;
    }
  }

  .more-comment-btn {
    font-size: 28rpx;
    height: 55rpx;
    line-height: 55rpx;
    text-align: center;
    margin: 50rpx auto 0 auto;
    width: 200rpx;
    -moz-border-radius: 10rpx;
    -webkit-border-radius: 10rpx;
    border-radius: 10rpx;
    color: #ff4856;
    border: 1px solid #ff4856;
  }

  .detail_bottom {
    width: 100%;
    border-top: 1px solid #ededed;
    position: fixed;
    bottom: 0;
    background: #fff;
    z-index: 1001;
    .bottom_box {
      display: flex;
      align-items: center;
      justify-content: flex-end;
      position: relative;
      .contact {
        width: 100rpx;
        height: 80rpx;
        margin: 0 auto;
        position: absolute;
        text-align: center;
        line-height: 80rpx;
        left: 100rpx;
        opacity: 0;
      }
    }
    .btn-ZAN{
      background: #ff4856;
      color: #fff;
    }
    .btn-fav {
      color: #fff;
      background: #ff6e30;
    }
    .color-ZAN {
      background: #A9A9A9;
      color: #fff;
    }
    .color-fav {
      color: #fff;
      background: #A9A9A9;
    }
    .item {
      flex: 1;
      text-align: center;
      .doc {
        font-size: 24rpx;
      }
    }
  }
</style>
